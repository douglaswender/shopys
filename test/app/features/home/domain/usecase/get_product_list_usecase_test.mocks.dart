// Mocks generated by Mockito 5.0.12 from annotations
// in shopys/test/app/features/home/domain/usecase/get_product_list_usecase_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:shopys/app/core/error/failures.dart' as _i5;
import 'package:shopys/app/features/home/domain/entities/product_entity.dart'
    as _i6;
import 'package:shopys/app/features/home/domain/repositories/product_repository.dart'
    as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeEither<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [IProductRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIProductRepository extends _i1.Mock
    implements _i3.IProductRepository {
  MockIProductRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.ProductEntity>>>
      getProductList() => (super.noSuchMethod(
          Invocation.method(#getProductList, []),
          returnValue:
              Future<_i2.Either<_i5.Failure, List<_i6.ProductEntity>>>.value(
                  _FakeEither<_i5.Failure, List<_i6.ProductEntity>>())) as _i4
          .Future<_i2.Either<_i5.Failure, List<_i6.ProductEntity>>>);
}
